tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
assignment = c(assignment,c_model_iter)
}
assignment
dat_iter
alpha
lambda
nu
psi
# psi=diag(diag(var(datc)))
psi=diag(diag(var(datc)))/2
psi
datc
datc = all.data %>% filter(Seed==1,Chain==3)
assignment = c()
for(iter in 1:20) {
dat_iter=datc %>% filter(Iter==iter) %>% select(x,y) %>% as.matrix()
psi=diag(diag(var(dat_iter)))/2
results <- crp_gibbs(dat_iter,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model_iter = apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
assignment = c(assignment,c_model_iter)
}
dat_iter
psi
c_init
datc = all.data %>% filter(Seed==1,Chain==3)
assignment = c()
for(iter in 1:20) {
dat_iter=datc %>% filter(Iter==iter) %>% select(x,y) %>% as.matrix()
psi=diag(diag(var(dat_iter)))/2
c_init <- rep(1,nrow(dat_iter))
results <- crp_gibbs(dat_iter,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model_iter = apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
assignment = c(assignment,c_model_iter)
}
datc_model = cbind(datc,assignment=assignment)
datc_model$Iter = as.factor(datc_model$Iter)
datc_model$assignment = as.integer(datc_model$assignment)
library("plotly")
# cols <- c("1" = "red", "2" = "blue", "3" = "darkgreen", "4" = "orange","5" = "purple")
p=datc_model %>% ggplot(aes(x,y,color=assignment,frame=Iter))+geom_point()+
scale_color_gradient(low="blue", high="red")
#   scale_color_manual(values=cols)
ggplotly(p)
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.02
# lambda = 0.05
nu=10
assignment_2 = assignment
datc = all.data %>% filter(Seed==1,Chain==3)
assignment = c()
for(iter in 1:20) {
dat_iter=datc %>% filter(Iter==iter) %>% select(x,y) %>% as.matrix()
psi=diag(diag(var(dat_iter)))/2
c_init <- rep(1,nrow(dat_iter))
results <- crp_gibbs(dat_iter,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2500)
c_model_iter = apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
assignment = c(assignment,c_model_iter)
}
datc_model = cbind(datc,assignment=assignment)
datc_model$Iter = as.factor(datc_model$Iter)
datc_model$assignment = as.integer(datc_model$assignment)
library("plotly")
# cols <- c("1" = "red", "2" = "blue", "3" = "darkgreen", "4" = "orange","5" = "purple")
p=datc_model %>% ggplot(aes(x,y,color=assignment,frame=Iter))+geom_point()+
scale_color_gradient(low="blue", high="red")
#   scale_color_manual(values=cols)
ggplotly(p)
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.01
# lambda = 0.05
nu=10
assignment_2
assignment_3 = assignment
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.01
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.01
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(diag(var(datc)))/2
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.01
# lambda = 0.05
nu=10
datc = all.data %>% filter(Seed==1,Chain==3)
assignment = c()
for(iter in 1:20) {
dat_iter=datc %>% filter(Iter==iter) %>% select(x,y) %>% as.matrix()
psi=diag(diag(var(dat_iter)))/2
c_init <- rep(1,nrow(dat_iter))
results <- crp_gibbs(dat_iter,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2500)
c_model_iter = apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
assignment = c(assignment,c_model_iter)
}
datc_model = cbind(datc,assignment=assignment)
datc_model$Iter = as.factor(datc_model$Iter)
datc_model$assignment = as.integer(datc_model$assignment)
library("plotly")
# cols <- c("1" = "red", "2" = "blue", "3" = "darkgreen", "4" = "orange","5" = "purple")
p=datc_model %>% ggplot(aes(x,y,color=assignment,frame=Iter))+geom_point()+
scale_color_gradient(low="blue", high="red")
#   scale_color_manual(values=cols)
ggplotly(p)
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.05
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(diag(var(datc)))/2
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.05
datc = all.data %>% filter(Seed==1,Chain==3)
assignment = c()
for(iter in 1:20) {
dat_iter=datc %>% filter(Iter==iter) %>% select(x,y) %>% as.matrix()
psi=diag(diag(var(dat_iter)))/2
c_init <- rep(1,nrow(dat_iter))
results <- crp_gibbs(dat_iter,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2500)
c_model_iter = apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
assignment = c(assignment,c_model_iter)
}
datc_model = cbind(datc,assignment=assignment)
datc_model$Iter = as.factor(datc_model$Iter)
datc_model$assignment = as.integer(datc_model$assignment)
library("plotly")
# cols <- c("1" = "red", "2" = "blue", "3" = "darkgreen", "4" = "orange","5" = "purple")
p=datc_model %>% ggplot(aes(x,y,color=assignment,frame=Iter))+geom_point()+
scale_color_gradient(low="blue", high="red")
#   scale_color_manual(values=cols)
ggplotly(p)
assignment_4 = assignment
#Prior specification
alpha = 0.05
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.02
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(diag(var(datc)))/2
#Prior specification
alpha = 0.05
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.02
datc = all.data %>% filter(Seed==1,Chain==3)
assignment = c()
for(iter in 1:20) {
dat_iter=datc %>% filter(Iter==iter) %>% select(x,y) %>% as.matrix()
psi=diag(diag(var(dat_iter)))/2
c_init <- rep(1,nrow(dat_iter))
results <- crp_gibbs(dat_iter,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2500)
c_model_iter = apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
assignment = c(assignment,c_model_iter)
}
datc_model = cbind(datc,assignment=assignment)
datc_model = cbind(datc,assignment=assignment)
datc_model$Iter = as.factor(datc_model$Iter)
datc_model$assignment = as.integer(datc_model$assignment)
library("plotly")
# cols <- c("1" = "red", "2" = "blue", "3" = "darkgreen", "4" = "orange","5" = "purple")
p=datc_model %>% ggplot(aes(x,y,color=assignment,frame=Iter))+geom_point()+
scale_color_gradient(low="blue", high="red")
#   scale_color_manual(values=cols)
ggplotly(p)
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.05
# lambda=0.02
# lambda = 0.05
nu=10
psi
diag(var(datc))
datc
datc = all.data %>% filter(Seed == 1, Chain == 3, Iter==17) %>% select(x=x,y=y) %>% as.matrix()
diag(var(datc)
ï¼‰
diag(var(datc))
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc))))/2
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
psi
diag(var(datc))
mean(diag(var(datc)))
mean(diag(var(datc)))/2
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
mean.det_all%>%ggplot(aes(x=Iter,y=mean.det))+
geom_point()+
geom_line(size=1.1)+
geom_errorbar(aes(ymin=mean.det-se.mean,ymax=mean.det+se.mean),width=0.5,size=1.1)+
labs(x = 'Iteration',
y = 'Covariance Determinant (Pattern spread)')+
theme_bw()+
theme(text = element_text(family='Times New Roman', size= 16, face='bold'),
panel.grid = element_blank(),
plot.title = element_text(hjust=0.5),
legend.position = 'none',
axis.title = element_blank())
mean.det_all
all.data
mean.det_all <- all.data%>%group_by(Seed,Chain,Iter)%>%
summarise(det.cov=det(cov(cbind(x,y))))%>%
group_by(Iter)%>%
summarise(N=n(),mean.det=mean(det.cov),se.mean=sd(det.cov)/sqrt(N))
mean.det_all%>%ggplot(aes(x=Iter,y=mean.det))+
geom_point()+
geom_line(size=1.1)+
geom_errorbar(aes(ymin=mean.det-se.mean,ymax=mean.det+se.mean),width=0.5,size=1.1)+
labs(x = 'Iteration',
y = 'Covariance Determinant (Pattern spread)')+
theme_bw()+
theme(text = element_text(family='Times New Roman', size= 16, face='bold'),
panel.grid = element_blank(),
plot.title = element_text(hjust=0.5),
legend.position = 'none',
axis.title = element_blank())
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.05
# lambda=0.02
# lambda = 0.05
nu=10
datc = all.data %>% filter(Seed==1,Chain==3)
assignment = c()
datc = all.data %>% filter(Seed == 1, Chain == 3, Iter==17) %>% select(x=x,y=y) %>% as.matrix()
plot(datc)
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.05
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
results <- crp_gibbs(datc,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model <- apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
# c_true <- rep(1:4, each = 5)
# table(c_true, c_model)
datc_model = data.frame(x=datc[,1],y=datc[,2],assignment = c_model)
datc_model %>% ggplot(aes(x,y,color=assignment))+geom_point()
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.02
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
results <- crp_gibbs(datc,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=200)
c_model <- apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
# c_true <- rep(1:4, each = 5)
# table(c_true, c_model)
datc_model = data.frame(x=datc[,1],y=datc[,2],assignment = c_model)
datc_model %>% ggplot(aes(x,y,color=assignment))+geom_point()
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.02
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
results <- crp_gibbs(datc,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model <- apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
# c_true <- rep(1:4, each = 5)
# table(c_true, c_model)
datc_model = data.frame(x=datc[,1],y=datc[,2],assignment = c_model)
datc_model %>% ggplot(aes(x,y,color=assignment))+geom_point()
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.01
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
results <- crp_gibbs(datc,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model <- apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
# c_true <- rep(1:4, each = 5)
# table(c_true, c_model)
datc_model = data.frame(x=datc[,1],y=datc[,2],assignment = c_model)
datc_model %>% ggplot(aes(x,y,color=assignment))+geom_point()
#Prior specification
alpha = 0.1
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.01
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
results <- crp_gibbs(datc,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model <- apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
# c_true <- rep(1:4, each = 5)
# table(c_true, c_model)
datc_model = data.frame(x=datc[,1],y=datc[,2],assignment = c_model)
datc_model %>% ggplot(aes(x,y,color=assignment))+geom_point()
#Prior specification
alpha = 0.09
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.01
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
results <- crp_gibbs(datc,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model <- apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
# c_true <- rep(1:4, each = 5)
# table(c_true, c_model)
datc_model = data.frame(x=datc[,1],y=datc[,2],assignment = c_model)
datc_model %>% ggplot(aes(x,y,color=assignment))+geom_point()
#Prior specification
alpha = 0.08
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.01
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
results <- crp_gibbs(datc,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model <- apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
# c_true <- rep(1:4, each = 5)
# table(c_true, c_model)
datc_model = data.frame(x=datc[,1],y=datc[,2],assignment = c_model)
datc_model %>% ggplot(aes(x,y,color=assignment))+geom_point()
#Prior specification
alpha = 0.08
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.01
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
results <- crp_gibbs(datc,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model <- apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
# c_true <- rep(1:4, each = 5)
# table(c_true, c_model)
datc_model = data.frame(x=datc[,1],y=datc[,2],assignment = c_model)
datc_model %>% ggplot(aes(x,y,color=assignment))+geom_point()
#Prior specification
alpha = 0.08
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.02
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
results <- crp_gibbs(datc,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model <- apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
# c_true <- rep(1:4, each = 5)
# table(c_true, c_model)
datc_model = data.frame(x=datc[,1],y=datc[,2],assignment = c_model)
datc_model %>% ggplot(aes(x,y,color=assignment))+geom_point()
#Prior specification
alpha = 0.08
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.02
# lambda=0.02
# lambda = 0.05
nu=10
# psi=diag(diag(var(datc)))
psi=diag(2)*mean(diag(var(datc)))/2
c_init <- rep(1,nrow(datc))
results <- crp_gibbs(datc,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model <- apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
# c_true <- rep(1:4, each = 5)
# table(c_true, c_model)
datc_model = data.frame(x=datc[,1],y=datc[,2],assignment = c_model)
datc_model %>% ggplot(aes(x,y,color=assignment))+geom_point()
datc = all.data %>% filter(Seed==1,Chain==3)
assignment = c()
#Prior specification
alpha = 0.08
mu0 <- matrix(rep(0,2),ncol=2,byrow =TRUE)
lambda=0.02
# lambda=0.02
# lambda = 0.05
nu=10
datc = all.data %>% filter(Seed==1,Chain==3)
assignment = c()
for(iter in 1:20) {
dat_iter=datc %>% filter(Iter==iter) %>% select(x,y) %>% as.matrix()
psi=diag(2)*mean(diag(var(dat_iter)))/2
c_init <- rep(1,nrow(dat_iter))
results <- crp_gibbs(dat_iter,alpha=alpha,mu0=mu0, lambda=lambda, nu=nu, psi=psi, c_init=c_init, maxIter=2000)
c_model_iter = apply(results[,-(1:200)], 1, FUN = function(x) {
tab <- table(x)
ans <- names(tab[which.max(tab)])
return(ans) })
assignment = c(assignment,c_model_iter)
}
assignment
datc_model = cbind(datc,assignment=assignment)
datc_model$Iter = as.factor(datc_model$Iter)
datc_model$assignment = as.integer(datc_model$assignment)
datc_model
setwd("/Users/young/Desktop/UCSD/Research/VWM_Iterated_Learning/Homogenous_dots/Results/Test")
save(datc_model, file = "test_result_seed_1_chain_3.Rdata")
# cols <- c("1" = "red", "2" = "blue", "3" = "darkgreen", "4" = "orange","5" = "purple")
p=datc_model %>% ggplot(aes(x,y,color=assignment,frame=Iter))+geom_point()+
scale_color_gradient(low="blue", high="red")
#   scale_color_manual(values=cols)
ggplotly(p)
ls
var(c(1,2))
var(c(1,1,22))
var(c(1,1,2,2))
sd(c(1,1,2,2))
sd(c(1,2))
sd(c(1,1,2,2))/sqrt(4)
sd(c(1,2))/sqrt(2)
