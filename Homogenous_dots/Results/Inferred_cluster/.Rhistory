for(chains in 1){
for(iter in 1:20){
group.filename<-cacheFilename(seeds,
chains,
iter,
idstring='Inferred_clusters')
load(group.filename)
inferred_group = tibble(assignment = list(result$assignment), list(group_mean = result$mean),list(group_cov = result$cov))
tb.results = bind_rows(tibble.result.group,inferred_group)
# assignment.iter = c(assignment.iter,result[['assignment']])
}
}
}
inferred_group = tibble(assignment = list(result$assignment), list(group_mean = result$mean),list(group_cov = result$cov))
inferred_group
inferred_group
inferred_group$assignment
inferred_group$`list(group_mean = result$mean)`
inferred_group$`list(group_cov = result$cov)`
View(tb.results)
inferred_group
inferred_group = tibble(assignment = result$assignment, group_mean = result$mean,group_cov = result$cov)
inferred_group
inferred_group = do(tibble(assignment = list(result$assignment), list(group_mean = result$mean),list(group_cov = result$cov)))
inferred_group = do(tibble(assignment = list(result$assignment), list(group_mean = result$mean),list(group_cov = result$cov)))
result
inferred_group = tibble(assignment = list(result$assignment), group_mean = list(result$mean),group_cov = list(result$cov))
inferred_group
tb.results
tb.results = bind_rows(tibble.result.group,inferred_group)
tb.results.group
tibble.result.group
tb.results
inferred_group
tb.results = bind_rows(tibble.result.group,inferred_group)
tb.results = bind_rows(tb.results.group,inferred_group)
# assignment.iter = c()
tb.result<-all.data%>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y))))
tb.results.group = tibble()
for(seeds in 1){
for(chains in 1){
for(iter in 1:20){
group.filename<-cacheFilename(seeds,
chains,
iter,
idstring='Inferred_clusters')
load(group.filename)
inferred_group = tibble(assignment = list(result$assignment), group_mean = list(result$mean),group_cov = list(result$cov))
tb.results = bind_rows(tb.results.group,inferred_group)
# assignment.iter = c(assignment.iter,result[['assignment']])
}
}
}
tb.results
tb.results.group
inferred_group
for(seeds in 1){
for(chains in 1){
for(iter in 1:20){
group.filename<-cacheFilename(seeds,
chains,
iter,
idstring='Inferred_clusters')
load(group.filename)
inferred_group = tibble(assignment = list(result$assignment), group_mean = list(result$mean),group_cov = list(result$cov))
tb.results = bind_rows(tb.results.group,inferred_group)
# assignment.iter = c(assignment.iter,result[['assignment']])
}
}
}
tb.results
tb.results.group = tibble()
for(seeds in 1){
for(chains in 1){
for(iter in 1:20){
group.filename<-cacheFilename(seeds,
chains,
iter,
idstring='Inferred_clusters')
load(group.filename)
inferred_group = tibble(assignment = list(result$assignment), group_mean = list(result$mean),group_cov = list(result$cov))
tb.results.group = bind_rows(tb.results.group,inferred_group)
# assignment.iter = c(assignment.iter,result[['assignment']])
}
}
}
tb.results.group
tb.results.group$group_mean
tb.results.group$group_mean[[1]]
tb.results.group$group_mean[[2]]
tb.results.group$group_cov[[1]]
tb.results.group$assignment
tb.results.group$assignment[[1]]
# assignment.iter = c()
tb.result<-all.data%>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y))))
tb.results.group = tibble()
for(seeds in 1){
for(chains in 1){
for(iter in 1:20){
group.filename<-cacheFilename(seeds,
chains,
iter,
idstring='Inferred_clusters')
load(group.filename)
inferred_group = tibble(assignment = list(result$assignment), group_mean = list(result$mean),group_cov = list(result$cov))
tb.results.group = bind_rows(tb.results.group,inferred_group)
# assignment.iter = c(assignment.iter,result[['assignment']])
}
}
}
for(seeds in 1){
for(chains in 2:10){
chaindata <- filter(all.data, Seed == seeds, Chain == chains)
priors = list('mu_0' = c(0,0),
'lambda' = 0.1,
'nu' = 5,
'S' = diag(diag(var(test_data))),
'crpalpha' = alpha)
get.CRP.results(chaindata,
max.iter=1000)
}
}
# assignment.iter = c()
tb.result<-all.data%>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y))))
tb.results.group = tibble()
for(seeds in 1){
for(chains in 1:10){
for(iter in 1:20){
group.filename<-cacheFilename(seeds,
chains,
iter,
idstring='Inferred_clusters')
load(group.filename)
inferred_group = tibble(assignment = list(result$assignment), group_mean = list(result$mean),group_cov = list(result$cov))
tb.results.group = bind_rows(tb.results.group,inferred_group)
# assignment.iter = c(assignment.iter,result[['assignment']])
}
}
}
tb.results.group
tb.result_seed_1<-all.data%>% filter(seed==1) %>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y))))
all.data%>% filter(seed==1)
all.data
tb.result_seed_1<-all.data%>% filter(Seed==1) %>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y))))
tb.result_seed_1 %>% bind_cols(tb.results.group)
tb.result_seed_1 <- tb.result_seed_1 %>% bind_cols(tb.results.group)
tb.result_seed_1
tb.result_seed_1 %>% filter(Iter == 20)
tb.result_seed_1 %>% filter(Iter == 19)
tb.result_seed_1 %>% filter(Iter == 17)
tb.result_seed_1 %>% filter(Iter == 16)
tb.result_seed_1 %>% filter(Iter == 1)
tb.result_seed_1 %>% filter(Iter == 2)
tb.result_seed_1 %>% filter(Iter == 3)
tb.result_seed_1 %>% filter(Iter == 4)
tb.result_seed_1 %>% filter(Iter == 5)
tb.result_seed_1 %>% filter(Iter == 6)
tb.result_seed_1 %>% filter(Iter == 7)
tb.result_seed_1 %>% filter(Iter == 7)
tb.result_seed_1 %>% filter(Iter == 8)
tb.result_seed_1 %>% filter(Iter == 9)
tb.result_seed_1 %>% filter(Iter == 10)
for(seeds in 2:10){
for(chains in 1:10){
chaindata <- filter(all.data, Seed == seeds, Chain == chains)
priors = list('mu_0' = c(0,0),
'lambda' = 0.1,
'nu' = 5,
'S' = diag(diag(var(test_data))),
'crpalpha' = alpha)
get.CRP.results(chaindata,
max.iter=1000)
}
}
tb.results.group = tibble()
for(seeds in 1:3){
for(chains in 1:10){
for(iter in 1:20){
group.filename<-cacheFilename(seeds,
chains,
iter,
idstring='Inferred_clusters')
load(group.filename)
inferred_group = tibble(assignment = list(result$assignment), group_mean = list(result$mean),group_cov = list(result$cov))
tb.results.group = bind_rows(tb.results.group,inferred_group)
# assignment.iter = c(assignment.iter,result[['assignment']])
}
}
}
tb.result_seed_1_to_3<-all.data%>% filter(Seed<4) %>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y))))
tb.results.group
tb.result_seed_1_to_3 <- tb.result_seed_1_to_3 %>% bind_cols(tb.results.group)
tb.result_seed_1_to_3 %>% filter(Iter == 10)
tb.result_seed_1_to_3 %>% filter(Iter == 20)
tb.result_seed_1_to_3
tb.result_seed_1_to_3[1,]
tb.result_seed_1_to_3[1,]$assignment
tb.result_seed_1_to_3[1,]$assignment %>% table()
tb.result_seed_1_to_3[1,]$assignment %>% table() %>% length()
tb.result_seed_1_to_3<-all.data%>% filter(Seed<4) %>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y)))) %>%
rowwise() %>%
mutate(group_numbers = length(table(assignment)))
tb.result_seed_1_to_3
tb.result_seed_1_to_3[1,]$assignment
tb.result_seed_1_to_3[1,]$assignment[[1]]
tb.result_seed_1_to_3<-all.data%>% filter(Seed<4) %>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y)))) %>%
rowwise() %>%
mutate(group_numbers = length(table(assignment[[1]])))
tb.result_seed_1_to_3<-all.data%>% filter(Seed<4) %>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y)))) %>%
rowwise() %>%
mutate(group_numbers = length(table(assignment)))
tb.result_seed_1_to_3<-all.data%>% filter(Seed<4) %>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y)))) %>%
rowwise() %>%
mutate(group_numbers = length(unique(assignment)))
tb.result_seed_1_to_3$assignment
test_data = all.data %>% filter(Seed==3,Chain==10,Iter==20) %>% select(x,y)
plot(test_data)
test_data = all.data %>% filter(Seed==3,Chain==10,Iter==20) %>% select(x,y)
plot(test_data)
alpha = 0.5
priors = list('mu_0' = c(0,0),
# 'sigma_0' = diag(2)*3^2,
# 'line_min_count' = 4,
#measurement error
# 'dot.cov' = diag(diag(var(test_data))),
'lambda' = 0.1,
'nu' = 5,
'S' = diag(diag(var(test_data))),
'crpalpha' = alpha)
c.init = sample(1,15,replace = T)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
a
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
Gaussian_param
c.init = sample(1,15,replace = T)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
a
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
Gaussian_param
tb.result_seed_1_to_3<-all.data%>% filter(Seed<4) %>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y)))) %>%
rowwise() %>%
mutate(group_numbers = length(unique(assignment)))
tb.result
tb.result_seed_1_to_3
tb.result_seed_1_to_3<-all.data%>% filter(Seed<4) %>%
group_by(Seed,Chain,Iter)%>%
do(tibble(xy = list(data.frame(x=.$x, y=.$y)))) %>%
rowwise() %>%
mutate(group_numbers = length(unique(unlist(assignment))))
tb.result_seed_1_to_3$assignment
tb.result_seed_1_to_3[1,]$assignment
tb.result_seed_1_to_3[1,]$assignment %>% unlist()
tb.result_seed_1_to_3[1,]$assignment %>% unlist() %>% unique()
c.init = sample(1,15,replace = T)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
a
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
Gaussian_param
c.init = rep(1,15)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
a
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
Gaussian_param
c.init = rep(1,15)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
a
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
Gaussian_param
c.init = rep(1,15)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
a
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
Gaussian_param
c.init = rep(1,15)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
a
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
Gaussian_param
tb.result_seed_1_to_3
tb.result_seed_1_to_3 %>% filter(Seed == 1, Chain ==3)
tb.result_seed_1_to_3 %>% filter(Seed == 1, Chain ==3) %>% pull(assignment)
assignment_1_3 = tb.result_seed_1_to_3 %>% filter(Seed == 1, Chain ==3) %>% pull(assignment)
Seed_1_chain_3 = all.data %>% filter(Seed == 1, Chain == 3) %>% cbind(assignment = as.factor(unlist(assignment_1_3)))
Seed_1_chain_3
p <- Seed_1_chain_3 %>% group_by(Iter) %>%
ggplot(aes(x=x, y=y,color=assignment.iter, frame=Iter))+
# facet_grid(Chain~Seed)+
scale_color_gradient(low="blue", high="red")+
geom_point(size=1)+
theme_bw()+
# coord_cartesian(xlim=c(-1,1), ylim=c(-1,1))+
theme(axis.text = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_blank(),
legend.position = 'none')
ggplotly(p)
inferred_group
result
seeds
chains
iter
iter = 19
group.filename<-cacheFilename(seeds,
chains,
iter,
idstring='Inferred_clusters')
load(group.filename)
result
seeds=3
seeds=1
chains=3
iter = 7
group.filename<-cacheFilename(seeds,
chains,
iter,
idstring='Inferred_clusters')
load(group.filename)
result
test_data = all.data %>% filter(Seed == 1, Chain == 3, Iter==20) %>% select(x=x,y=y)
alpha = 0.5
priors = list('mu_0' = c(0,0),
'lambda' = 0.1,
'nu' = 5,
'S' = diag(diag(var(test_data))),
'crpalpha' = alpha)
priors
result$priors
result
group.filename
iter
iter = 20
iter = 7
group.filename<-cacheFilename(seeds,
chains,
iter,
idstring='Inferred_clusters')
test_data = all.data %>% filter(Seed == 1, Chain == 3, Iter==7) %>% select(x=x,y=y)
alpha = 0.5
priors = list('mu_0' = c(0,0),
'lambda' = 0.1,
'nu' = 5,
'S' = diag(diag(var(test_data))),
'crpalpha' = alpha)
priors
result$priors
alpha = 0.5
priors = list('mu_0' = c(0,0),
'lambda' = 0.1,
'nu' = 5,
'S' = diag(diag(var(test_data))),
'crpalpha' = alpha)
c.init = sample(1,15,replace = T)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
a
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
test_data = data.frame(x=test_data[,1],y=test_data[,2])
test_data = all.data %>% filter(Seed == 1, Chain == 3, Iter==7) %>% select(x=x,y=y)
alpha = 0.5
priors = list('mu_0' = c(0,0),
'lambda' = 0.1,
'nu' = 5,
'S' = diag(diag(var(test_data))),
'crpalpha' = alpha)
c.init = sample(1,15,replace = T)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
test_data = all.data %>% filter(Seed == 1, Chain == 3, Iter==7) %>% select(x=x,y=y)
alpha = 0.5
priors = list('mu_0' = c(0,0),
'lambda' = 0.1,
'nu' = 5,
'S' = diag(diag(var(test_data))),
'crpalpha' = alpha)
c.init = sample(1,15,replace = T)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
alpha = 0.5
priors = list('mu_0' = c(0,0),
'lambda' = 0.1,
'nu' = 5,
'S' = diag(diag(var(test_data))),
'crpalpha' = alpha)
c.init = sample(1,15,replace = T)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
c.init = rep(1,15)
c.init = rep(1,15)
c.init = rep(1,15)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
c.init = sample(1,15,replace = T)
c.init = rep(1,15)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
alpha = 0.5
priors = list('mu_0' = c(0,0),
'lambda' = 0.1,
'nu' = 5,
'S' = diag(diag(var(test_data))),
'crpalpha' = alpha)
c.init = sample(1,15,replace = T)
c.init = rep(1,15)
results = CRP.gibbs(test_data,c.init, priors, max.iter=1000)
a=assignment(results[['assignment']])
test_data_a = cbind(test_data,a)
test_data_a %>%
ggplot(aes(x = x, y = y, color=LETTERS[a]))+
geom_point()+
theme_minimal()
Gaussian_param <- mean_cov_estimate(test_data,a,priors)
